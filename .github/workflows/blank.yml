# This is a basic workflow to help you get started with Actions

name: update sample.json

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          # Variables
          REPO_OWNER="inaina12345"
          REPO_NAME="test2222"
          FILE_PATH="sample.json"
          CURRENT_DATE=$(date +%Y%m%d)
          HEAD_BRANCH="update-json-file-$CURRENT_DATE"
          BASE_BRANCH="main"
          PR_TITLE="Update JSON file on $CURRENT_DATE"
          PR_BODY="This PR updates the JSON file with new content on $CURRENT_DATE."
          GITHUB_TOKEN="{{ secrets.GITHUB_TOKEN }}"
          NEW_CONTENT='{"number1": "1.0.1"}'
          # Get the current file content
          CURRENT_FILE_CONTENT=$(curl -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/contents/$FILE_PATH | jq -r '.content' | base64 --decode)
          # Merge new content with current file content (simple example, customize as needed)
          UPDATED_CONTENT=$(echo $CURRENT_FILE_CONTENT | jq --argjson newContent "$NEW_CONTENT" '. * $newContent' | base64)
          # Create a new branch
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" -d "{\"ref\":\"refs/heads/$HEAD_BRANCH\",\"sha\":\"$(git rev-parse HEAD)\"}" https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/git/refs
          # Update the file in the new branch
          curl -X PUT -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" -d "{\"message\":\"Update JSON file\",\"content\":\"$UPDATED_CONTENT\",\"branch\":\"$HEAD_BRANCH\"}" https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/contents/$FILE_PATH
          # Create the PR
          curl -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" -d "{\"title\":\"$PR_TITLE\",\"body\":\"$PR_BODY\",\"head\":\"$HEAD_BRANCH\",\"base\":\"$BASE_BRANCH\"}" https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls
